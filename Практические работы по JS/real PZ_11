import java.util.Scanner;

//1
/*public class Main
{
	public static void main(String[] args) {
	    Scanner sc = new Scanner(System.in);
		System.out.print("Введите ваше число(неотрицательное целое): ");
		int n = sc.nextInt();
		if(n >= 0){
		    if(n == 0){
		        System.out.println("Факториал числа " + n + " = " + 1);
		    }
            else{
                System.out.println("Факториал чила "+ n + " = " + facrorial(n));
            }
		}
		else{
		    System.out.println("ВЫ ДАУУУН");
		}
	}
	
	public static int facrorial(int n){
	    int result = 1;
	    for (int i = 1; i <= n; i++) {
            result = result * i;
        }
        return result;
	}
}*/


//3
/*public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        sc.nextLine();
        
        int[][] mas = new int[n][];
        
        for(int i = 0; i < n; i++) {
            String line = sc.nextLine();
            String[] numbers = line.split(" ");
            int[] a = new int[numbers.length];
            
            for (int j = 0; j < numbers.length; j++) {
                a[j] = Integer.parseInt(numbers[j]);
            }
            
            mas[i] = a;
        }
        int ans = find_line7(mas);
        if(ans != -1) {
            System.out.println("Сумма строки под номером " + (ans + 1) + " кратна 7");
        } else {
            System.out.println("Таких строк нет");
        }
    }

    public static int find_line7(int[][] mas) {
        for (int i = 0; i < mas.length; i++) {
            int sum = 0;
            for (int j = 0; j < mas[i].length; j++) {
                sum += mas[i][j];
            }
            if (sum % 7 == 0) {
                return i;
            }
        }
        return -1; 
    }
}*/


//5
/*import java.util.HashMap;
import java.util.Map;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Введите количество ступенек: ");
        int n = scanner.nextInt();

        Map<Integer, Long> cache = new HashMap<>();
        long ways = countWays(n, cache);

        System.out.println("Число всевозможных маршрутов: " + ways);
    }

    public static long countWays(int n, Map<Integer, Long> cache) {
        if (n <= 1) {
            return 1;
        }

        if (cache.containsKey(n)) {
            return cache.get(n);
        }

        long ways = countWays(n - 1, cache) + countWays(n - 2, cache) + countWays(n - 3, cache);
        cache.put(n, ways);

        return ways;
    }
}*/
