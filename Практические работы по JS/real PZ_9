//1
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        sc.nextLine();

        Map<String, Integer> wordCounts = new HashMap<>();

        for (int i = 0; i < n; i++) {
            String word = sc.nextLine();
            wordCounts.put(word, wordCounts.getOrDefault(word, 0) + 1);
        }

        int maxCount = 0;
        String mostFrequentWord = "";
        for (Map.Entry<String, Integer> entry : wordCounts.entrySet()) {
            if (entry.getValue() > maxCount) {
                maxCount = entry.getValue();
                mostFrequentWord = entry.getKey();
            }
        }
        
        System.out.println("слово, которое встречается чаще всего: " + mostFrequentWord);
    }
}

//2 
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        
        int n = Integer.parseInt(s.nextLine());
        
        Map<String, List<String>> professionsMap = new HashMap<>(); 
        
        for (int i = 0; i < n; i++) {
            String name = s.nextLine();
            String profession = s.nextLine();
            
            if (professionsMap.containsKey(profession)) {
                professionsMap.get(profession).add(name);
            } else {
                List<String> employees = new ArrayList<>();
                employees.add(name);
                professionsMap.put(profession, employees);
            }
        }
        
        s.close();

        String most = "";
        int maxEmployees = 0;
        
        for (Map.Entry<String, List<String>> entry : professionsMap.entrySet()) {
            if (entry.getValue().size() > maxEmployees) {
                most = entry.getKey();
                maxEmployees = entry.getValue().size();
            }
        }
        
        System.out.println("Сотрудников профессии \"" + most + "\" больше всего: " + maxEmployees);
        System.out.println("Имена сотрудников этой профессии:");
        
        List<String> m = professionsMap.get(most);
        for (String employee : m) {
            System.out.println(employee);
        }
    }
}

//3
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        
        Set<Integer> uniqueNumbers = new HashSet<>();
        
        for (int i = 0; i < n; i++) {
            int number = sc.nextInt();
            
            if (uniqueNumbers.contains(number)) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
                uniqueNumbers.add(number);
            }
        }
        
        sc.close();
    }
}


//4
/*import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        int numLines = Integer.parseInt(scanner.nextLine());
        Set<String> uniqueWords = new HashSet<>();

        for (int i = 0; i < numLines; i++) {
            String line = scanner.nextLine();
            String[] words = line.split("\\s+"); // Разделение строки на слова по пробелам

            for (String word : words) {
                word = word.replaceAll("[^a-zA-Zа-яА-ЯёЁ]", "").toLowerCase();

                if (!word.isEmpty()) {
                    uniqueWords.add(word);
                }
            }
        }

        scanner.close();

        System.out.println("Количество различных слов: " + uniqueWords.size());
    }
}*/


//5
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        sc.nextLine();

        Map<String, Set<String>> children = new HashMap<>();

        for (int i = 0; i < n; i++) {
            String line = sc.nextLine();
            String[] tokens = line.split(": ");

            String name = tokens[0];
            String[] words = tokens[1].split(" ");

            Set<String> wordSet = new HashSet<>();
            for (String word : words) {
                word = word.toLowerCase();
                if (wordSet.contains(word)) {
                    continue; 
                }
                wordSet.add(word);
            }

            children.put(name, wordSet);
        }

        int k = sc.nextInt();

        Map<String, Integer> wordCount = new HashMap<>();
        for (String name : children.keySet()) {
            Set<String> wordSet = children.get(name);
            int count = 0;

            for (String word : wordSet) {
                if (word.length() >= k) {
                    count++;
                }
            }

            wordCount.put(name, count);
        }

        int maxCount = 0;
        String winner = "";
        for (String name : wordCount.keySet()) {
            int count = wordCount.get(name);
            if (count > maxCount) {
                maxCount = count;
                winner = name;
            }
        }

        System.out.println(winner + ": " + maxCount);
    }
}
